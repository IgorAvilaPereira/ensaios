/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

//import com.sun.java.swing.plaf.gtk.resources.gtk_pt_BR;
import persistencia.ComunicacaoServer;
import java.awt.Component;
import java.awt.Dimension;
import java.io.File;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lucas
 */
public class TelaGrupos extends javax.swing.JFrame {

    ComunicacaoServer conn;
    Thread receive = null;
    Locale location;
    public static final float numLetras = (float) 1.0;
    DefaultListModel modelListGrupo;
    HashSet<Integer> listaItens;
    DefaultTableModel modelTableRedes;
    DefaultTableModel modelTableRedesPublicas;
    Rede[] listaRedes = null;
    ResourceBundle stringsInter;
    Rede redeEditada;

    /**
     * Creates new form TelaGrupos
     */
    public TelaGrupos(ComunicacaoServer conn, Locale location) {
        this.conn = conn;
        this.location = location;
        stringsInter = ResourceBundle.getBundle("resources/msgs", location);
        this.setTitle("Research.Net - " + stringsInter.getString("redes"));
        try {
            //UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
        } catch (Exception e) {
        }
        initComponents();
        preenche();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitGeral = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        labelAnoIni = new javax.swing.JLabel();
        labelAnoFim = new javax.swing.JLabel();
        comboAnoFim = new javax.swing.JComboBox();
        comboAnoIni = new javax.swing.JComboBox();
        textNome = new javax.swing.JTextField();
        checkPublico = new javax.swing.JCheckBox();
        buttonSalvar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        textPesquisar = new javax.swing.JTextField();
        buttonIncluir = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        labelMembros = new javax.swing.JLabel();
        labelPesquisar = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listGrupo = new javax.swing.JList();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPesquisa = new javax.swing.JList();
        splitLeft = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        labelRedes = new javax.swing.JLabel();
        buttonNovaRede = new javax.swing.JButton();
        buttonExcluirRede = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableRedes = new javax.swing.JTable();
        buttonEditarRede = new javax.swing.JButton();
        buttonVisualizarRede = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelRedesPublicas = new javax.swing.JLabel();
        textPesquisarRedes = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableRedesPublicas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        splitGeral.setDividerLocation(300);

        labelNome.setText("Nome");

        labelAnoIni.setText("Ano Inicial");

        labelAnoFim.setText("Ano Final");

        checkPublico.setText("Público");
        checkPublico.setToolTipText("");
        checkPublico.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkPublico.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        buttonSalvar.setText("Salvar");
        buttonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalvarActionPerformed(evt);
            }
        });

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(checkPublico))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNome)
                            .addComponent(labelAnoIni)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(buttonSalvar)
                                .addComponent(labelAnoFim)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboAnoIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonCancelar))))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAnoIni)
                    .addComponent(comboAnoIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAnoFim))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkPublico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSalvar)
                    .addComponent(buttonCancelar))
                .addContainerGap(437, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Propriedades", jPanel3);

        textPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textPesquisarKeyReleased(evt);
            }
        });

        buttonIncluir.setText("<-");
        buttonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIncluirActionPerformed(evt);
            }
        });

        buttonExcluir.setText("->");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        labelMembros.setText("Membros");

        labelPesquisar.setText("Pesquisar");

        listGrupo.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Cláudio Dornelles Mello Júnior", "Eder Mateus Nunes Gonçalves", "Emanuel da Silva Diaz Estrada", "Nelson Lopes Duarte Filho", "Silvia Silva da Costa Botelho", "Vinícius Menezes de Oliveira" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(listGrupo);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );

        listPesquisa.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Adriano Velasque Werhli", "Alessandro de Lima Bicho", "Andre Prisco Vargas", "Antonio Carlos da Rocha Costa", "Cláudio Dornelles Mello Júnior", "Danúbia Bueno Espíndola", "Diana Francisca Adamatti", "Eder Mateus Nunes Gonçalves", "Eduardo Nunes Borges", "Emanuel da Silva Diaz Estrada", "Graçaliz Pereira Dimuro", "Ivete Martins Pinto", "Leonardo Ramos Emmendorfer", "Nelson Lopes Duarte Filho", "Odorico Machado Mendizabal", "Paulo Lilles Jorge Drews Junior", "Rodrigo Andrade de Bem", "Silvia Silva da Costa Botelho", "Vinícius Menezes de Oliveira" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listPesquisa);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMembros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonIncluir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonExcluir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPesquisar)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelMembros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(labelPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(buttonIncluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonExcluir))
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Membros", jPanel4);

        splitGeral.setRightComponent(jTabbedPane1);

        splitLeft.setDividerLocation(300);
        splitLeft.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        labelRedes.setText("Minhas Redes");

        buttonNovaRede.setText("Nova");
        buttonNovaRede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNovaRedeActionPerformed(evt);
            }
        });

        buttonExcluirRede.setText("Excluir");
        buttonExcluirRede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirRedeActionPerformed(evt);
            }
        });

        tableRedes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ));
        jScrollPane3.setViewportView(tableRedes);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );

        buttonEditarRede.setText("Editar");
        buttonEditarRede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarRedeActionPerformed(evt);
            }
        });

        buttonVisualizarRede.setText("Visualizar");
        buttonVisualizarRede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVisualizarRedeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelRedes)
                .addContainerGap(231, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(buttonNovaRede)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEditarRede)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExcluirRede)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(buttonVisualizarRede))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelRedes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNovaRede)
                    .addComponent(buttonExcluirRede)
                    .addComponent(buttonEditarRede)
                    .addComponent(buttonVisualizarRede)))
        );

        splitLeft.setTopComponent(jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(197, 300));

        labelRedesPublicas.setText("Redes Públicas");

        textPesquisarRedes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textPesquisarRedesKeyReleased(evt);
            }
        });

        tableRedesPublicas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Autor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableRedesPublicas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labelRedesPublicas)
                .addGap(0, 226, Short.MAX_VALUE))
            .addComponent(textPesquisarRedes, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labelRedesPublicas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textPesquisarRedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
        );

        splitLeft.setRightComponent(jPanel2);

        splitGeral.setLeftComponent(splitLeft);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitGeral, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitGeral, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIncluirActionPerformed
        // TODO add your handling code here:
        List itens = listPesquisa.getSelectedValuesList();
        membro item;
        for (int i = 0; i < itens.size(); i++) {
            item = (membro) itens.get(i);
            if (!listaItens.contains(item.id)) {
                modelListGrupo.addElement(itens.get(i));
                listaItens.add(item.id);
            }
        }
    }//GEN-LAST:event_buttonIncluirActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        List itens = listGrupo.getSelectedValuesList();
        membro item;
        for (int i = 0; i < itens.size(); i++) {
            item = (membro) itens.get(i);
            listaItens.remove(item.id);
            modelListGrupo.removeElement(item);
        }
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void textPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPesquisarKeyReleased
        String msg = textPesquisar.getText();
        int size = msg.length();
        if (size % numLetras == 0 && size > 0) {
            conn.send(msg, ComunicacaoServer.SEARCH_MEMBERS);
            while (conn.receiving) {
            }
            String[] split = conn.msg.split("/");
            String[] item;
            membro[] lista = new membro[split.length];
            for (int i = 0; i < split.length; i++) {
                if (split[i].length() > 0) {
                    item = split[i].split("\\+");
                    if (item.length > 1) {
                        lista[i] = new membro(Integer.parseInt(item[0]), item[1]);
                    }
                }
            }
            listPesquisa.setListData(lista);
        }
    }//GEN-LAST:event_textPesquisarKeyReleased

    private void buttonNovaRedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNovaRedeActionPerformed
        // TODO add your handling code here:
        setTabbedPaneEnabled(true);
        setButtonsEnabled(false);
        redeEditada = null;
        tableRedes.clearSelection();
    }//GEN-LAST:event_buttonNovaRedeActionPerformed

    private void buttonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalvarActionPerformed
        if (textNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, stringsInter.getString("nomevazio"));
        } else if (textNome.getText().contains("/") || textNome.getText().contains("+") || textNome.getText().contains("#")) {
            JOptionPane.showMessageDialog(null, stringsInter.getString("caracteresnome"));
        } else if (listaItens.size() < 2) {
            JOptionPane.showMessageDialog(null, stringsInter.getString("numeromembros"));
        } else if (comboAnoFim.getSelectedIndex() > comboAnoIni.getSelectedIndex() && comboAnoFim.getSelectedIndex() != 0 && comboAnoIni.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, stringsInter.getString("anomaior"));
        } else {
            String msg = "";
            if (redeEditada != null) {
                msg += redeEditada.id + "+";
            }
            msg += textNome.getText() + "+";
            if (comboAnoIni.getSelectedIndex() == 0) {
                msg += "0+";
            } else {
                msg += comboAnoIni.getSelectedItem() + "+";
            }
            if (comboAnoFim.getSelectedIndex() == 0) {
                msg += "0+";
            } else {
                msg += comboAnoFim.getSelectedItem() + "+";
            }
            if (checkPublico.isSelected()) {
                msg += "public+";
            } else {
                msg += "private+";
            }
            Iterator<Integer> iterator = listaItens.iterator();
            while (iterator.hasNext()) {
                msg += iterator.next() + "+";
            }
            if (redeEditada == null) {
                conn.send(msg, ComunicacaoServer.CREATE_NETWORK);
            } else {
                conn.send(msg, ComunicacaoServer.MODIFY_NETWORK);
            }
            while (conn.receiving) {
            };
            getListaRedes();
            verificarXMLs();
            setButtonsEnabled(true);
            buttonSalvar.setEnabled(false);
            buttonCancelar.setEnabled(false);
        }
    }//GEN-LAST:event_buttonSalvarActionPerformed

    private void buttonEditarRedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarRedeActionPerformed
        int selectedRow = tableRedes.getSelectedRow();
        if (selectedRow > -1) {
            setTabbedPaneEnabled(true);
            modelListGrupo.clear();
            listaItens.clear();
            redeEditada = (Rede) modelTableRedes.getValueAt(selectedRow, 0);
            textNome.setText(redeEditada.nome);
            comboAnoFim.setSelectedItem(redeEditada.anoFim);
            comboAnoIni.setSelectedItem(redeEditada.anoIni);
            checkPublico.setSelected(redeEditada.publico);
            Iterator<membro> iterator = redeEditada.listaMembros.iterator();
            membro m;
            while (iterator.hasNext()) {
                m = iterator.next();
                modelListGrupo.addElement(m);
                listaItens.add(m.id);
            }
            setButtonsEnabled(false);
        }
    }//GEN-LAST:event_buttonEditarRedeActionPerformed

    private void buttonVisualizarRedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVisualizarRedeActionPerformed
        int selectedRow = tableRedes.getSelectedRow();
        if (selectedRow > -1) {
            redeEditada = (Rede) modelTableRedes.getValueAt(selectedRow, 0);
            TelaGrafo gui = new TelaGrafo(this.location, redeEditada.xml);
        }
    }//GEN-LAST:event_buttonVisualizarRedeActionPerformed

    private void buttonExcluirRedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirRedeActionPerformed
        int selectedRow = tableRedes.getSelectedRow();
        if (selectedRow > -1) {
            Object[] opcoes = {stringsInter.getString("sim"), stringsInter.getString("nao")};
            int op = JOptionPane.showOptionDialog(this, stringsInter.getString("confirmarexcluir"), stringsInter.getString("excluirrede"), JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, stringsInter.getString("nao"));
            if (op == 0) {
                redeEditada = (Rede) modelTableRedes.getValueAt(selectedRow, 0);
                conn.send(String.valueOf(redeEditada.id), conn.DELETE_NETWORK);
                while (conn.receiving) {
                }
                getListaRedes();
            }
        }
    }//GEN-LAST:event_buttonExcluirRedeActionPerformed

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        setTabbedPaneEnabled(false);
        setButtonsEnabled(true);
        redeEditada = null;
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void textPesquisarRedesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPesquisarRedesKeyReleased
        String msg = textPesquisarRedes.getText();
        int size = msg.length();
        if (size % numLetras == 0 && size > 0) {
            conn.send(msg, ComunicacaoServer.SEARCH_NETWORKS);
            while (conn.receiving) {
            }
            modelTableRedesPublicas.setRowCount(0);
            modelTableRedesPublicas.fireTableDataChanged();
            String[] split = conn.msg.split("/");
            String[] item;
            for (int i = 0; i < split.length; i++) {
                if (split[i].length() > 0) {
                    item = split[i].split("\\+");
                    if (item.length > 1) {
                        Object[] row = {item[0], item[1]};
                        modelTableRedesPublicas.addRow(row);
                    }
                }
            }
        }
    }//GEN-LAST:event_textPesquisarRedesKeyReleased

    private void preenche() {
        labelRedes.setText(stringsInter.getString("minhasRedes"));
        labelRedesPublicas.setText(stringsInter.getString("redesPublicas"));
        labelMembros.setText(stringsInter.getString("membros"));
        labelPesquisar.setText(stringsInter.getString("pesquisar"));
        buttonExcluirRede.setText(stringsInter.getString("excluir"));
        buttonNovaRede.setText(stringsInter.getString("nova"));
        labelNome.setText(stringsInter.getString("nome"));
        labelAnoFim.setText(stringsInter.getString("anoFinal"));
        labelAnoIni.setText(stringsInter.getString("anoInicial"));
        checkPublico.setText(stringsInter.getString("publico"));
        buttonSalvar.setText(stringsInter.getString("salvar"));

        modelTableRedes = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelTableRedes.addColumn(stringsInter.getString("nome"));
        tableRedes.setModel(modelTableRedes);
        tableRedes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        modelTableRedesPublicas = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelTableRedesPublicas.addColumn(stringsInter.getString("nome"));
        modelTableRedesPublicas.addColumn(stringsInter.getString("autor"));
        tableRedesPublicas.setModel(modelTableRedesPublicas);

        listPesquisa.setListData(new Object[0]);
        modelListGrupo = new DefaultListModel();
        listGrupo.setModel(modelListGrupo);
        listaItens = new HashSet<Integer>();

        Dimension lists = new Dimension(191, 456);
        listPesquisa.setSize(lists);
        listPesquisa.setMaximumSize(lists);
        listPesquisa.setMinimumSize(lists);
        listGrupo.setSize(lists);
        listGrupo.setMaximumSize(lists);
        listGrupo.setMinimumSize(lists);

        comboAnoFim.addItem("----");
        comboAnoIni.addItem("----");
        for (int i = Calendar.getInstance().get(Calendar.YEAR); i > 1970; i--) {
            comboAnoFim.addItem(i);
            comboAnoIni.addItem(i);
        }

        getListaRedes();
        verificarXMLs();

        setTabbedPaneEnabled(false);

    }

    private void getListaRedes() {
        conn.send("", ComunicacaoServer.REQUEST_NETWORKS);
        while (conn.receiving) {
        }
        String[] split = conn.msg.split("/");
        String[] item;
        listaRedes = new Rede[split.length];
        int rowCount = modelTableRedes.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            modelTableRedes.removeRow(i);
            modelTableRedes.fireTableDataChanged();
        }
        Rede[] lista = new Rede[1];
        for (int i = 0; i < split.length; i++) {
            if (split[i].length() > 0) {
                item = split[i].split("\\+");
                lista[0] = new Rede(Integer.parseInt(item[0]), item[1], Boolean.parseBoolean(item[2]), Integer.parseInt(item[3]), Integer.parseInt(item[4]), item[5]);
                listaRedes[i] = lista[0];
                for (int c = 6; c < item.length; c += 2) {
                    listaRedes[i].listaMembros.add(new membro(Integer.parseInt(item[c]), item[c + 1]));
                }
                modelTableRedes.addRow(lista);
            }
        }
        modelTableRedes.fireTableDataChanged();
    }

    private void verificarXMLs() {
        File xml;
        if (redeEditada != null) {
            xml = new File(redeEditada.xml);
            if (xml.exists()) {
                xml.delete();
            }
        }
        for (int i = 0; i < listaRedes.length; i++) {
            xml = new File(listaRedes[i].xml);
            if (!xml.exists()) {
                conn.send(String.valueOf(listaRedes[i].id), ComunicacaoServer.REQUEST_PACKAGE);
                while (conn.receiving) {
                }
            }
        }
    }

    private void setTabbedPaneEnabled(boolean bool) {
        Component[] comp = jPanel3.getComponents();
        for (int c = 0; c < comp.length; c++) {
            comp[c].setEnabled(bool);
        }
        comp = jPanel4.getComponents();
        for (int c = 0; c < comp.length; c++) {
            comp[c].setEnabled(bool);
        }
        textNome.setText("");
        comboAnoFim.setSelectedIndex(0);
        comboAnoIni.setSelectedIndex(0);
        checkPublico.setSelected(false);
        modelListGrupo.clear();
        listaItens.clear();
    }

    private void setButtonsEnabled(boolean bool) {
        buttonNovaRede.setEnabled(bool);
        buttonEditarRede.setEnabled(bool);
        buttonExcluirRede.setEnabled(bool);
        buttonVisualizarRede.setEnabled(bool);
    }

    private class membro {

        String item;
        int id;

        public membro(int id, String item) {
            this.id = id;
            this.item = item;
        }

        @Override
        public String toString() {
            return item;
        }
    }

    private class Rede {

        String nome;
        int id;
        int anoIni;
        int anoFim;
        boolean publico;
        String xml;
        List<membro> listaMembros;

        public Rede(int id, String nome, boolean publico, int anoIni, int anoFim, String xml) {
            this.id = id;
            this.nome = nome;
            this.anoIni = anoIni;
            this.anoFim = anoFim;
            this.publico = publico;
            this.xml = xml;
            listaMembros = new ArrayList<membro>();
        }

        @Override
        public String toString() {
            return nome;
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonEditarRede;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonExcluirRede;
    private javax.swing.JButton buttonIncluir;
    private javax.swing.JButton buttonNovaRede;
    private javax.swing.JButton buttonSalvar;
    private javax.swing.JButton buttonVisualizarRede;
    private javax.swing.JCheckBox checkPublico;
    private javax.swing.JComboBox comboAnoFim;
    private javax.swing.JComboBox comboAnoIni;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelAnoFim;
    private javax.swing.JLabel labelAnoIni;
    private javax.swing.JLabel labelMembros;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPesquisar;
    private javax.swing.JLabel labelRedes;
    private javax.swing.JLabel labelRedesPublicas;
    private javax.swing.JList listGrupo;
    private javax.swing.JList listPesquisa;
    private javax.swing.JSplitPane splitGeral;
    private javax.swing.JSplitPane splitLeft;
    private javax.swing.JTable tableRedes;
    private javax.swing.JTable tableRedesPublicas;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField textPesquisar;
    private javax.swing.JTextField textPesquisarRedes;
    // End of variables declaration//GEN-END:variables

}
